# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2019, Jupyter Development Team
# This file is distributed under the same license as the nbconvert package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nbconvert 5.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-09 12:23+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/api/filters.rst:2
msgid "Filters"
msgstr ""

#: ../../source/api/filters.rst:4
msgid ""
"Filters are for use with the "
":class:`~nbconvert.exporters.TemplateExporter` exporter. They provide a "
"way for you transform notebook contents to a particular format depending "
"on the template you are using. For example, when converting to HTML, you "
"would want to use the :func:`~nbconvert.filters.ansi2html` function to "
"convert ANSI colors (from e.g. a terminal traceback) to HTML colors."
msgstr ""

#: ../../source/api/filters.rst:12
msgid ":doc:`/api/exporters`"
msgstr ""

#: ../../source/api/filters.rst:13
msgid "API documentation for the various exporter classes"
msgstr ""

#: nbconvert.filters.add_anchor:1 of
msgid "Add an id and an anchor-link to an html header"
msgstr ""

#: nbconvert.filters.add_anchor:3 of
msgid "For use on markdown headings"
msgstr ""

#: nbconvert.filters.add_prompts:1 of
msgid "Add prompts to code snippets"
msgstr ""

#: nbconvert.filters.ansi2html:1 of
msgid "Convert ANSI colors to HTML colors."
msgstr ""

#: nbconvert.filters.ansi2html nbconvert.filters.ansi2latex
#: nbconvert.filters.comment_lines nbconvert.filters.convert_pandoc
#: nbconvert.filters.escape_latex nbconvert.filters.get_lines
#: nbconvert.filters.indent nbconvert.filters.ipython2python
#: nbconvert.filters.markdown2latex nbconvert.filters.markdown2rst
#: nbconvert.filters.strip_ansi nbconvert.filters.strip_dollars
#: nbconvert.filters.strip_files_prefix nbconvert.filters.wrap_text of
msgid "Parameters"
msgstr ""

#: nbconvert.filters.ansi2html:3 of
msgid "Text containing ANSI colors to convert to HTML"
msgstr ""

#: nbconvert.filters.ansi2latex:1 of
msgid "Convert ANSI colors to LaTeX colors."
msgstr ""

#: nbconvert.filters.ansi2latex:3 of
msgid "Text containing ANSI colors to convert to LaTeX"
msgstr ""

#: nbconvert.filters.ascii_only:1 of
msgid "ensure a string is ascii"
msgstr ""

#: nbconvert.filters.citation2latex:1 of
msgid "Parse citations in Markdown cells."
msgstr ""

#: nbconvert.filters.citation2latex:3 of
msgid ""
"This looks for HTML tags having a data attribute names `data-cite` and "
"replaces it by the call to LaTeX cite command. The tranformation looks "
"like this:"
msgstr ""

#: nbconvert.filters.citation2latex:7 of
msgid "`<cite data-cite=\"granger\">(Granger, 2013)</cite>`"
msgstr ""

#: nbconvert.filters.citation2latex:9 of
msgid "Becomes"
msgstr ""

#: nbconvert.filters.citation2latex:11 of
msgid "`\\cite{granger}`"
msgstr ""

#: nbconvert.filters.citation2latex:13 of
msgid ""
"Any HTML tag can be used, which allows the citations to be formatted in "
"HTML in any manner."
msgstr ""

#: nbconvert.filters.comment_lines:1 of
msgid "Build a Python comment line from input text."
msgstr ""

#: nbconvert.filters.comment_lines:3 of
msgid "Text to comment out."
msgstr ""

#: nbconvert.filters.comment_lines:5 of
msgid "Character to append to the start of each line."
msgstr ""

#: nbconvert.filters.escape_latex:1 of
msgid "Escape characters that may conflict with latex."
msgstr ""

#: nbconvert.filters.escape_latex:3 of
msgid "Text containing characters that may conflict with Latex"
msgstr ""

#: nbconvert.filters.DataTypeFilter:1 of
msgid "Returns the preferred display format"
msgstr ""

#: nbconvert.filters.get_lines:1 of
msgid ""
"Split the input text into separate lines and then return the lines that "
"the caller is interested in."
msgstr ""

#: nbconvert.filters.get_lines:4 of
msgid "Text to parse lines from."
msgstr ""

#: nbconvert.filters.get_lines:6 of
msgid "First line to grab from."
msgstr ""

#: nbconvert.filters.get_lines:8 of
msgid "Last line to grab from."
msgstr ""

#: nbconvert.filters.convert_pandoc:1 of
msgid "Convert between any two formats using pandoc."
msgstr ""

#: nbconvert.filters.convert_pandoc:3 nbconvert.filters.markdown2latex:3
#: nbconvert.filters.markdown2rst:3 of
msgid ""
"This function will raise an error if pandoc is not installed. Any error "
"messages generated by pandoc are printed to stderr."
msgstr ""

#: nbconvert.filters.convert_pandoc:6 of
msgid "Input string, assumed to be valid in from_format."
msgstr ""

#: nbconvert.filters.convert_pandoc:8 of
msgid "Pandoc format of source."
msgstr ""

#: nbconvert.filters.convert_pandoc:10 of
msgid "Pandoc format for output."
msgstr ""

#: nbconvert.filters.convert_pandoc nbconvert.filters.indent
#: nbconvert.filters.markdown2latex nbconvert.filters.markdown2rst of
msgid "Returns"
msgstr ""

#: nbconvert.filters.convert_pandoc:13 nbconvert.filters.markdown2latex:13
#: nbconvert.filters.markdown2rst:9 of
msgid "**out** -- Output as returned by pandoc."
msgstr ""

#: nbconvert.filters.convert_pandoc nbconvert.filters.indent
#: nbconvert.filters.markdown2latex nbconvert.filters.markdown2rst of
msgid "Return type"
msgstr ""

#: nbconvert.filters.html2text:1 of
msgid "extract inner text from html"
msgstr ""

#: nbconvert.filters.html2text:3 of
msgid "Analog of jQuery's $(element).text()"
msgstr ""

#: nbconvert.filters.indent:1 of
msgid "Indent a string a given number of spaces or tabstops."
msgstr ""

#: nbconvert.filters.indent:3 of
msgid "indent(str,nspaces=4,ntabs=0) -> indent str by ntabs+nspaces."
msgstr ""

#: nbconvert.filters.indent:5 of
msgid "The string to be indented."
msgstr ""

#: nbconvert.filters.indent:7 of
msgid "The number of spaces to be indented."
msgstr ""

#: nbconvert.filters.indent:9 of
msgid "The number of tabs to be indented."
msgstr ""

#: nbconvert.filters.indent:11 of
msgid ""
"Whether to scrub existing indentation.  If True, all lines will be "
"aligned to the same indentation.  If False, existing indentation will be "
"strictly increased."
msgstr ""

#: nbconvert.filters.indent:16 of
msgid "**str|unicode**"
msgstr ""

#: nbconvert.filters.ipython2python:1 of
msgid "Transform IPython syntax to pure Python syntax"
msgstr ""

#: nbconvert.filters.ipython2python:3 of
msgid "IPython code, to be transformed to pure Python"
msgstr ""

#: nbconvert.filters.markdown2html:1 of
msgid "Convert a markdown string to HTML using mistune"
msgstr ""

#: nbconvert.filters.markdown2latex:1 of
msgid "Convert a markdown string to LaTeX via pandoc."
msgstr ""

#: nbconvert.filters.markdown2latex:6 nbconvert.filters.markdown2rst:6 of
msgid "Input string, assumed to be valid markdown."
msgstr ""

#: nbconvert.filters.markdown2latex:8 of
msgid ""
"Markup used by pandoc's reader default : pandoc extended markdown (see "
"http://pandoc.org/README.html#pandocs-markdown)"
msgstr ""

#: nbconvert.filters.markdown2rst:1 of
msgid "Convert a markdown string to ReST via pandoc."
msgstr ""

#: nbconvert.filters.path2url:1 of
msgid "Turn a file path into a URL"
msgstr ""

#: nbconvert.filters.posix_path:1 of
msgid "Turn a path into posix-style path/to/etc"
msgstr ""

#: nbconvert.filters.posix_path:3 of
msgid ""
"Mainly for use in latex on Windows, where native Windows paths are not "
"allowed."
msgstr ""

#: nbconvert.filters.prevent_list_blocks:1 of
msgid "Prevent presence of enumerate or itemize blocks in latex headings cells"
msgstr ""

#: nbconvert.filters.strip_ansi:1 of
msgid "Remove ANSI escape codes from text."
msgstr ""

#: nbconvert.filters.strip_ansi:3 of
msgid "Source to remove the ANSI from"
msgstr ""

#: nbconvert.filters.strip_dollars:1 of
msgid "Remove all dollar symbols from text"
msgstr ""

#: nbconvert.filters.strip_dollars:3 of
msgid "Text to remove dollars from"
msgstr ""

#: nbconvert.filters.strip_files_prefix:1 of
msgid ""
"Fix all fake URLs that start with `files/`, stripping out the `files/` "
"prefix. Applies to both urls (for html) and relative paths (for markdown "
"paths)."
msgstr ""

#: nbconvert.filters.strip_files_prefix:4 of
msgid "Text in which to replace 'src=\"files/real...' with 'src=\"real...'"
msgstr ""

#: nbconvert.filters.wrap_text:1 of
msgid "Intelligently wrap text. Wrap text without breaking words if possible."
msgstr ""

#: nbconvert.filters.wrap_text:4 of
msgid "Text to wrap."
msgstr ""

#: nbconvert.filters.wrap_text:6 of
msgid "Number of characters to wrap to, default 100."
msgstr ""

